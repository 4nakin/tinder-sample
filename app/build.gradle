apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: '../dependencies.gradle'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "com.thuatnguyen.tindersample"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"

    // UI
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint"
    implementation "androidx.cardview:cardview:$versions.cardview"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"
    implementation "com.yuyakaido.android:card-stack-view:$versions.cardstackview"
    implementation "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofit"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"

    // Hilt
    implementation "com.google.dagger:hilt-android:$versions.hiltAndroid"
    kapt "com.google.dagger:hilt-android-compiler:$versions.hiltAndroid"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hiltViewmodel"
    kapt "androidx.hilt:hilt-compiler:$versions.hiltViewmodel"

    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room"

    // Test
    testImplementation "junit:junit:$versions.junit"
    testImplementation "androidx.arch.core:core-testing:$versions.archTestingCore"
    testImplementation "androidx.test:core:$versions.core"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "com.google.truth:truth:$versions.truth"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.mockserver"
    androidTestImplementation "com.google.truth:truth:$versions.truth"
    androidTestImplementation "androidx.test.ext:junit:$versions.junitext"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
}